{"version":3,"file":"static/chunks/945.d4dccc49e77dd84b.js","mappings":"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","sources":["webpack://_N_E/./components/ui/CanvasRevealEffect.tsx","webpack://_N_E/./components/Approach.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\"use client\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport React, { useMemo, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\n\r\nexport const CanvasRevealEffect = ({\r\n  animationSpeed = 0.4,\r\n  opacities = [0.3, 0.3, 0.3, 0.5, 0.5, 0.5, 0.8, 0.8, 0.8, 1],\r\n  colors = [[0, 255, 255]],\r\n  containerClassName,\r\n  dotSize,\r\n  showGradient = true,\r\n}: {\r\n  /**\r\n   * 0.1 - slower\r\n   * 1.0 - faster\r\n   */\r\n  animationSpeed?: number;\r\n  opacities?: number[];\r\n  colors?: number[][];\r\n  containerClassName?: string;\r\n  dotSize?: number;\r\n  showGradient?: boolean;\r\n}) => {\r\n  return (\r\n    <div className={cn(\"h-full relative bg-white w-full\", containerClassName)}>\r\n      <div className=\"h-full w-full\">\r\n        <DotMatrix\r\n          colors={colors ?? [[0, 255, 255]]}\r\n          dotSize={dotSize ?? 3}\r\n          opacities={\r\n            opacities ?? [0.3, 0.3, 0.3, 0.5, 0.5, 0.5, 0.8, 0.8, 0.8, 1]\r\n          }\r\n          shader={`\r\n              float animation_speed_factor = ${animationSpeed.toFixed(1)};\r\n              float intro_offset = distance(u_resolution / 2.0 / u_total_size, st2) * 0.01 + (random(st2) * 0.15);\r\n              opacity *= step(intro_offset, u_time * animation_speed_factor);\r\n              opacity *= clamp((1.0 - step(intro_offset + 0.1, u_time * animation_speed_factor)) * 1.25, 1.0, 1.25);\r\n            `}\r\n          center={[\"x\", \"y\"]}\r\n        />\r\n      </div>\r\n      {showGradient && (\r\n        <div className=\"absolute inset-0 bg-gradient-to-t from-gray-950 to-[84%]\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface DotMatrixProps {\r\n  colors?: number[][];\r\n  opacities?: number[];\r\n  totalSize?: number;\r\n  dotSize?: number;\r\n  shader?: string;\r\n  center?: (\"x\" | \"y\")[];\r\n}\r\n\r\nconst DotMatrix: React.FC<DotMatrixProps> = ({\r\n  colors = [[0, 0, 0]],\r\n  opacities = [0.04, 0.04, 0.04, 0.04, 0.04, 0.08, 0.08, 0.08, 0.08, 0.14],\r\n  totalSize = 4,\r\n  dotSize = 2,\r\n  shader = \"\",\r\n  center = [\"x\", \"y\"],\r\n}) => {\r\n  const uniforms = React.useMemo(() => {\r\n    let colorsArray = [\r\n      colors[0],\r\n      colors[0],\r\n      colors[0],\r\n      colors[0],\r\n      colors[0],\r\n      colors[0],\r\n    ];\r\n    if (colors.length === 2) {\r\n      colorsArray = [\r\n        colors[0],\r\n        colors[0],\r\n        colors[0],\r\n        colors[1],\r\n        colors[1],\r\n        colors[1],\r\n      ];\r\n    } else if (colors.length === 3) {\r\n      colorsArray = [\r\n        colors[0],\r\n        colors[0],\r\n        colors[1],\r\n        colors[1],\r\n        colors[2],\r\n        colors[2],\r\n      ];\r\n    }\r\n\r\n    return {\r\n      u_colors: {\r\n        value: colorsArray.map((color) => [\r\n          color[0] / 255,\r\n          color[1] / 255,\r\n          color[2] / 255,\r\n        ]),\r\n        type: \"uniform3fv\",\r\n      },\r\n      u_opacities: {\r\n        value: opacities,\r\n        type: \"uniform1fv\",\r\n      },\r\n      u_total_size: {\r\n        value: totalSize,\r\n        type: \"uniform1f\",\r\n      },\r\n      u_dot_size: {\r\n        value: dotSize,\r\n        type: \"uniform1f\",\r\n      },\r\n    };\r\n  }, [colors, opacities, totalSize, dotSize]);\r\n\r\n  return (\r\n    <Shader\r\n      source={`\r\n        precision mediump float;\r\n        in vec2 fragCoord;\r\n\r\n        uniform float u_time;\r\n        uniform float u_opacities[10];\r\n        uniform vec3 u_colors[6];\r\n        uniform float u_total_size;\r\n        uniform float u_dot_size;\r\n        uniform vec2 u_resolution;\r\n        out vec4 fragColor;\r\n        float PHI = 1.61803398874989484820459;\r\n        float random(vec2 xy) {\r\n            return fract(tan(distance(xy * PHI, xy) * 0.5) * xy.x);\r\n        }\r\n        float map(float value, float min1, float max1, float min2, float max2) {\r\n            return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\r\n        }\r\n        void main() {\r\n            vec2 st = fragCoord.xy;\r\n            ${\r\n              center.includes(\"x\")\r\n                ? \"st.x -= abs(floor((mod(u_resolution.x, u_total_size) - u_dot_size) * 0.5));\"\r\n                : \"\"\r\n            }\r\n            ${\r\n              center.includes(\"y\")\r\n                ? \"st.y -= abs(floor((mod(u_resolution.y, u_total_size) - u_dot_size) * 0.5));\"\r\n                : \"\"\r\n            }\r\n      float opacity = step(0.0, st.x);\r\n      opacity *= step(0.0, st.y);\r\n\r\n      vec2 st2 = vec2(int(st.x / u_total_size), int(st.y / u_total_size));\r\n\r\n      float frequency = 5.0;\r\n      float show_offset = random(st2);\r\n      float rand = random(st2 * floor((u_time / frequency) + show_offset + frequency) + 1.0);\r\n      opacity *= u_opacities[int(rand * 10.0)];\r\n      opacity *= 1.0 - step(u_dot_size / u_total_size, fract(st.x / u_total_size));\r\n      opacity *= 1.0 - step(u_dot_size / u_total_size, fract(st.y / u_total_size));\r\n\r\n      vec3 color = u_colors[int(show_offset * 6.0)];\r\n\r\n      ${shader}\r\n\r\n      fragColor = vec4(color, opacity);\r\n      fragColor.rgb *= fragColor.a;\r\n        }`}\r\n      uniforms={uniforms}\r\n      maxFps={60}\r\n    />\r\n  );\r\n};\r\n\r\ntype Uniforms = {\r\n  [key: string]: {\r\n    value: number[] | number[][] | number;\r\n    type: string;\r\n  };\r\n};\r\nconst ShaderMaterial = ({\r\n  source,\r\n  uniforms,\r\n  maxFps = 60,\r\n}: {\r\n  source: string;\r\n  hovered?: boolean;\r\n  maxFps?: number;\r\n  uniforms: Uniforms;\r\n}) => {\r\n  const { size } = useThree();\r\n  const ref = useRef<THREE.Mesh>();\r\n  let lastFrameTime = 0;\r\n\r\n  useFrame(({ clock }) => {\r\n    if (!ref.current) return;\r\n    const timestamp = clock.getElapsedTime();\r\n    if (timestamp - lastFrameTime < 1 / maxFps) {\r\n      return;\r\n    }\r\n    lastFrameTime = timestamp;\r\n\r\n    const material: any = ref.current.material;\r\n    const timeLocation = material.uniforms.u_time;\r\n    timeLocation.value = timestamp;\r\n  });\r\n\r\n  const getUniforms = () => {\r\n    const preparedUniforms: any = {};\r\n\r\n    for (const uniformName in uniforms) {\r\n      const uniform: any = uniforms[uniformName];\r\n\r\n      switch (uniform.type) {\r\n        case \"uniform1f\":\r\n          preparedUniforms[uniformName] = { value: uniform.value, type: \"1f\" };\r\n          break;\r\n        case \"uniform3f\":\r\n          preparedUniforms[uniformName] = {\r\n            value: new THREE.Vector3().fromArray(uniform.value),\r\n            type: \"3f\",\r\n          };\r\n          break;\r\n        case \"uniform1fv\":\r\n          preparedUniforms[uniformName] = { value: uniform.value, type: \"1fv\" };\r\n          break;\r\n        case \"uniform3fv\":\r\n          preparedUniforms[uniformName] = {\r\n            value: uniform.value.map((v: number[]) =>\r\n              new THREE.Vector3().fromArray(v)\r\n            ),\r\n            type: \"3fv\",\r\n          };\r\n          break;\r\n        case \"uniform2f\":\r\n          preparedUniforms[uniformName] = {\r\n            value: new THREE.Vector2().fromArray(uniform.value),\r\n            type: \"2f\",\r\n          };\r\n          break;\r\n        default:\r\n          console.error(`Invalid uniform type for '${uniformName}'.`);\r\n          break;\r\n      }\r\n    }\r\n\r\n    preparedUniforms[\"u_time\"] = { value: 0, type: \"1f\" };\r\n    preparedUniforms[\"u_resolution\"] = {\r\n      value: new THREE.Vector2(size.width * 2, size.height * 2),\r\n    }; // Initialize u_resolution\r\n    return preparedUniforms;\r\n  };\r\n\r\n  // Shader material\r\n  const material = useMemo(() => {\r\n    const materialObject = new THREE.ShaderMaterial({\r\n      vertexShader: `\r\n      precision mediump float;\r\n      in vec2 coordinates;\r\n      uniform vec2 u_resolution;\r\n      out vec2 fragCoord;\r\n      void main(){\r\n        float x = position.x;\r\n        float y = position.y;\r\n        gl_Position = vec4(x, y, 0.0, 1.0);\r\n        fragCoord = (position.xy + vec2(1.0)) * 0.5 * u_resolution;\r\n        fragCoord.y = u_resolution.y - fragCoord.y;\r\n      }\r\n      `,\r\n      fragmentShader: source,\r\n      uniforms: getUniforms(),\r\n      glslVersion: THREE.GLSL3,\r\n      blending: THREE.CustomBlending,\r\n      blendSrc: THREE.SrcAlphaFactor,\r\n      blendDst: THREE.OneFactor,\r\n    });\r\n\r\n    return materialObject;\r\n  }, [size.width, size.height, source]);\r\n\r\n  return (\r\n    <mesh ref={ref as any}>\r\n      <planeGeometry args={[2, 2]} />\r\n      <primitive object={material} attach=\"material\" />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nconst Shader: React.FC<ShaderProps> = ({ source, uniforms, maxFps = 60 }) => {\r\n  return (\r\n    <Canvas className=\"absolute inset-0  h-full w-full\">\r\n      <ShaderMaterial source={source} uniforms={uniforms} maxFps={maxFps} />\r\n    </Canvas>\r\n  );\r\n};\r\ninterface ShaderProps {\r\n  source: string;\r\n  uniforms: {\r\n    [key: string]: {\r\n      value: number[] | number[][] | number;\r\n      type: string;\r\n    };\r\n  };\r\n  maxFps?: number;\r\n}\r\n","import React from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nimport { CanvasRevealEffect } from \"./ui/CanvasRevealEffect\";\r\n\r\nconst Approach = () => {\r\n  return (\r\n    <section className=\"w-full py-20\">\r\n      <h1 className=\"heading\">\r\n        Mon <span className=\"text-purple\">approche</span>\r\n      </h1>\r\n      {/* remove bg-white dark:bg-black */}\r\n      <div className=\"my-20 flex flex-col lg:flex-row items-center justify-center w-full gap-4\">\r\n        {/* add des prop */}\r\n        <Card\r\n          title=\"Concept et planification\"\r\n          icon={<AceternityIcon order=\"Phase 1\" />}\r\n          des=\"Nous travaillerons ensemble pour comprendre votre vision et vos objectifs pour le tournage. Qu'il s'agisse d'un mariage, d'un événement d'entreprise ou d'une séance de portrait personnel, nous discuterons des thèmes, des styles et des clichés spécifiques que vous avez en tête. Cette étape garantit que chaque détail est méticuleusement planifié pour capturer l’essence de votre histoire.\"\r\n        >\r\n          <CanvasRevealEffect\r\n            animationSpeed={5.1}\r\n            // add these classed for the border rounded overflowing -> rounded-3xl overflow-hidden\r\n            containerClassName=\"bg-emerald-900 rounded-3xl overflow-hidden\"\r\n          />\r\n        </Card>\r\n        <Card\r\n          title=\"Tournage et réalisation\"\r\n          icon={<AceternityIcon order=\"Phase 2\" />}\r\n          des=\"Une fois que nous avons un plan clair, je commence le processus créatif. Avec mon équipement prêt et un sens aigu du détail, je capture des images et des vidéos de haute qualité. Tout au long du tournage, je fournirai des mises à jour et des aperçus pour m'assurer que nous sommes sur la bonne voie, en effectuant les ajustements nécessaires pour obtenir les meilleurs résultats.\"\r\n        >\r\n          <CanvasRevealEffect\r\n            animationSpeed={3}\r\n            // change bg-black to bg-pink-900\r\n            containerClassName=\"bg-pink-900 rounded-3xl overflow-hidden\"\r\n            colors={[\r\n              // change the colors of the\r\n              [255, 166, 158],\r\n              [221, 255, 247],\r\n            ]}\r\n            dotSize={2}\r\n          />\r\n          {/* Radial gradient for the cute fade */}\r\n          {/* remove this one */}\r\n          {/* <div className=\"absolute inset-0 [mask-image:radial-gradient(400px_at_center,white,transparent)] bg-black/50 dark:bg-black/90\" /> */}\r\n        </Card>\r\n        <Card\r\n          title=\"Édition et livraison\"\r\n          icon={<AceternityIcon order=\"Phase 3\" />}\r\n          des=\"C'est ici que votre vision prend vie ! À l’aide d’un logiciel de montage professionnel, j’améliorerai et affinerai les séquences et les photos capturées. De la correction des couleurs à la conception sonore, chaque élément est soigneusement conçu. Une fois le montage terminé, vous recevrez les images et vidéos finales haute résolution, prêtes à être partagées et chéries.\"\r\n        >\r\n          <CanvasRevealEffect\r\n            animationSpeed={3}\r\n            containerClassName=\"bg-sky-600 rounded-3xl overflow-hidden\"\r\n            colors={[[125, 211, 252]]}\r\n          />\r\n        </Card>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Approach;\r\n\r\nconst Card = ({\r\n  title,\r\n  icon,\r\n  children,\r\n  // add this one for the desc\r\n  des,\r\n}: {\r\n  title: string;\r\n  icon: React.ReactNode;\r\n  children?: React.ReactNode;\r\n  des: string;\r\n}) => {\r\n  const [hovered, setHovered] = React.useState(false);\r\n  return (\r\n    <div\r\n      onMouseEnter={() => setHovered(true)}\r\n      onMouseLeave={() => setHovered(false)}\r\n      // change h-[30rem] to h-[35rem], add rounded-3xl\r\n      className=\"border border-black/[0.2] group/canvas-card flex items-center justify-center\r\n       dark:border-white/[0.2]  max-w-sm w-full mx-auto p-4 relative lg:h-[35rem] rounded-3xl \"\r\n      style={{\r\n        //   add these two\r\n        //   you can generate the color from here https://cssgradient.io/\r\n        background: \"rgb(4,7,29)\",\r\n        backgroundColor:\r\n          \"linear-gradient(90deg, rgba(4,7,29,1) 0%, rgba(12,14,35,1) 100%)\",\r\n      }}\r\n    >\r\n      {/* change to h-10 w-10 , add opacity-30  */}\r\n      <Icon className=\"absolute h-10 w-10 -top-3 -left-3 dark:text-white text-black opacity-30\" />\r\n      <Icon className=\"absolute h-10 w-10 -bottom-3 -left-3 dark:text-white text-black opacity-30\" />\r\n      <Icon className=\"absolute h-10 w-10 -top-3 -right-3 dark:text-white text-black opacity-30\" />\r\n      <Icon className=\"absolute h-10 w-10 -bottom-3 -right-3 dark:text-white text-black opacity-30\" />\r\n\r\n      <AnimatePresence>\r\n        {hovered && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            className=\"h-full w-full absolute inset-0\"\r\n          >\r\n            {children}\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      <div className=\"relative z-20 px-10\">\r\n        <div\r\n          // add this for making it center\r\n          // absolute top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%]\r\n          className=\"text-center group-hover/canvas-card:-translate-y-4 absolute top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%] \r\n        group-hover/canvas-card:opacity-0 transition duration-200 min-w-40 mx-auto flex items-center justify-center\"\r\n        >\r\n          {icon}\r\n        </div>\r\n        <h2\r\n          // change text-3xl, add text-center\r\n          className=\"dark:text-white text-center text-3xl opacity-0 group-hover/canvas-card:opacity-100\r\n         relative z-10 text-black mt-4  font-bold group-hover/canvas-card:text-white \r\n         group-hover/canvas-card:-translate-y-2 transition duration-200\"\r\n        >\r\n          {title}\r\n        </h2>\r\n        {/* add this one for the description */}\r\n        <p\r\n          className=\"text-sm opacity-0 group-hover/canvas-card:opacity-100\r\n         relative z-10 mt-4 group-hover/canvas-card:text-white text-center\r\n         group-hover/canvas-card:-translate-y-2 transition duration-200\"\r\n          style={{ color: \"#E4ECFF\" }}\r\n        >\r\n          {des}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// add order prop for the Phase number change\r\nconst AceternityIcon = ({ order }: { order: string }) => {\r\n  return (\r\n    <div>\r\n      {/* this btn is from https://ui.aceternity.com/components/tailwindcss-buttons border magic */}\r\n      {/* change rounded-lg, text-purple px-5 py-2 */}\r\n      {/* remove focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 focus:ring-offset-slate-50 cuz we don't need to focus */}\r\n      {/* remove text-sm font-medium h-12 , add font-bold text-2xl */}\r\n      <button className=\"relative inline-flex overflow-hidden rounded-full p-[1px] \">\r\n        <span\r\n          className=\"absolute inset-[-1000%] animate-[spin_2s_linear_infinite]\r\n         bg-[conic-gradient(from_90deg_at_50%_50%,#E2CBFF_0%,#393BB2_50%,#E2CBFF_100%)]\"\r\n        />\r\n        <span\r\n          className=\"inline-flex h-full w-full cursor-pointer items-center \r\n        justify-center rounded-full bg-slate-950 px-5 py-2 text-purple backdrop-blur-3xl font-bold text-2xl\"\r\n        >\r\n          {order}\r\n        </span>\r\n      </button>\r\n    </div>\r\n    // remove the svg and add the button\r\n    // <svg\r\n    //   width=\"66\"\r\n    //   height=\"65\"\r\n    //   viewBox=\"0 0 66 65\"\r\n    //   fill=\"none\"\r\n    //   xmlns=\"http://www.w3.org/2000/svg\"\r\n    //   className=\"h-10 w-10 text-black dark:text-white group-hover/canvas-card:text-white \"\r\n    // >\r\n    //   <path\r\n    //     d=\"M8 8.05571C8 8.05571 54.9009 18.1782 57.8687 30.062C60.8365 41.9458 9.05432 57.4696 9.05432 57.4696\"\r\n    //     stroke=\"currentColor\"\r\n    //     strokeWidth=\"15\"\r\n    //     strokeMiterlimit=\"3.86874\"\r\n    //     strokeLinecap=\"round\"\r\n    //     style={{ mixBlendMode: \"darken\" }}\r\n    //   />\r\n    // </svg>\r\n  );\r\n};\r\n\r\nexport const Icon = ({ className, ...rest }: any) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 24 24\"\r\n      strokeWidth=\"1.5\"\r\n      stroke=\"currentColor\"\r\n      className={className}\r\n      {...rest}\r\n    >\r\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 6v12m6-6H6\" />\r\n    </svg>\r\n  );\r\n};\r\n"],"names":["CanvasRevealEffect","animationSpeed","opacities","colors","containerClassName","dotSize","showGradient","param","jsx_runtime","jsxs","div","className","cn","jsx","DotMatrix","shader","concat","toFixed","center","totalSize","uniforms","React","colorsArray","length","u_colors","value","map","color","type","u_opacities","u_total_size","u_dot_size","Shader","source","includes","maxFps","ShaderMaterial","size","useThree","ref","useRef","lastFrameTime","useFrame","clock","current","timestamp","getElapsedTime","timeLocation","material","u_time","getUniforms","preparedUniforms","uniformName","uniform","THREE","fromArray","v","console","error","width","height","useMemo","vertexShader","fragmentShader","glslVersion","blending","blendSrc","blendDst","mesh","planeGeometry","args","primitive","object","attach","Canvas","components_Approach","section","h1","span","Card","title","icon","AceternityIcon","order","des","children","hovered","setHovered","onMouseEnter","onMouseLeave","style","background","backgroundColor","Icon","AnimatePresence","motion","initial","opacity","animate","h2","p","button","rest","svg","xmlns","fill","viewBox","strokeWidth","stroke","path","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}